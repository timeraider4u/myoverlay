--- loolwsd/LOOLKit.cpp.orig	2016-08-21 19:30:01.255761592 +0200
+++ loolwsd/LOOLKit.cpp	2016-08-21 20:22:39.966629485 +0200
@@ -105,6 +105,59 @@
             return true;
         }
     }
+    
+	int filecopy(FILE *dest, FILE *src)
+	{
+		const int size = 16384;
+		char buffer[size];
+		
+		while (!feof(src))
+		{
+			int n = fread(buffer, 1, size, src);
+			if (ferror(src)) {
+				return -1;
+			}
+			fwrite(buffer, 1, n, dest);
+			if (ferror(dest)) {
+				return -1;
+			}
+		}
+		fflush(dest);
+		if (ferror(dest)) {
+				return -1;
+		}
+		return 0;
+	}
+
+	int fileopen_and_copy(const char * dest, const char * src)
+	{
+		FILE * infile  = fopen(src,  "rb");
+		FILE * outfile = fopen(dest, "wb");
+		
+		if (ferror(infile)) { return -1; }
+		if (ferror(outfile)) { return -1; }
+		
+		if (filecopy(outfile, infile) == -1) {
+			return -1;
+		}
+		
+		fclose(infile);
+		fclose(outfile);
+		return 0;
+	}
+	
+	int link_or_copy_file(const char * src, const char * dest) {
+		int result = -1;
+		const bool hardLinkFile = true;
+		if (hardLinkFile)  {
+			//result = link(src, dest);
+			result = symlink(dest, src);
+		}
+		else {
+			result = fileopen_and_copy(dest, src);
+		}
+		return result;
+	}
 
     int linkOrCopyFunction(const char *fpath,
                            const struct stat* /*sb*/,
@@ -123,7 +176,7 @@
         case FTW_F:
         case FTW_SLN:
             File(newPath.parent()).createDirectories();
-            if (link(fpath, newPath.toString().c_str()) == -1)
+            if (link_or_copy_file(fpath, newPath.toString().c_str()) == -1)
             {
                 Log::syserror("link(\"" + std::string(fpath) + "\",\"" + newPath.toString() +
                            "\") failed. Exiting.");
